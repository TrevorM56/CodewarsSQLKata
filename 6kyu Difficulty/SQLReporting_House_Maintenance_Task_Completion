# DESCRIPTION:
#  A home maintenance company uses a database to keep track of tasks that need to be performed at various houses. The database has two tables: house_tasks and task_status. The house_tasks table contains a list of tasks scheduled for each house identified by a house_id. 
#  The task_status table tracks the progress of each task, including a description and its current status.

# house_tasks:
#  task_id (int, primary key): A unique identifier for each task.
#  house_id (int): The identifier of the house for which the task is scheduled.
#  task_name (varchar): The name of the task to be performed.

# task_status:
#  id (int, primary key): A unique identifier for each task status record.
#  task_id (int): The identifier of the task which this status relates to.
#  description (varchar): A brief description of the task status.
#  task_status (varchar): The current status of the task; it can be 'Completed', 'In Progress', or NULL if the status has not been set.

# Write a SQL query that generates a report for each house. The report should include the following columns:
#  house_id: The identifier of the house.
#  total_tasks: The total number of tasks scheduled for the house.
#  completed_tasks: The number of tasks that have been completed. A task is considered completed if all of its corresponding statuses in the task_status table are set to 'Completed'.
#  incomplete_tasks: The number of tasks that are not completed. A task is considered incomplete if any of its statuses are not 'Completed' or if the task does not have any status record in the task_status table.

# The result should be ordered by house_id in descending order.

# For this sample data:\
#  house_tasks:
#    | task_id | house_id | task_name |
#    +---------+----------+-----------+
#    | 1       | 1        | Paint     |
#    | 2       | 1        | Plumb     |
#    | 3       | 1        | Garden    |
#    | 4       | 2        | Electric  |
#    | 5       | 2        | Roof      |
#    | 6       | 3        | Cleanup   |
#    | 7       | 4        | Extra Work|
#  task_status:
#    | task_id | description | task_status |
#    +---------+-------------+-------------+
#    | 1       | Desc 1      | Completed   |
#    | 1       | Desc 2      | Completed   |
#    | 1       | Desc 3      | Completed   |
#    | 2       | Desc 4      | In Progress |
#    | 2       | Desc 5      | In Progress |
#    | 3       | Desc 6      | In Progress |
#    | 3       | Desc 7      | Completed   |
#    | 4       | Desc 8      | Completed   |
#    | 5       | Desc 9      | NULL        |
#    | 7       | Desc 10     | NULL        |
#    | 7       | Desc 11     | Completed   |

# desired output is the following:
#  | house_id | total_tasks | completed_tasks | incomplete_tasks |
#  +----------+-------------+-----------------+------------------+
#  | 4        | 1           | 0               | 1                |
#  | 3        | 1           | 0               | 1                |
#  | 2        | 2           | 1               | 1                |
#  | 1        | 3           | 1               | 2                |

## MY SOLUTION:
SELECT
  ht.house_id,
  COUNT(DISTINCT ht.task_id) AS total_tasks,
  SUM(CASE
        WHEN ts.completed THEN 1
        ELSE 0
      END) AS completed_tasks,
  SUM(CASE
        WHEN ts.completed THEN 0
        ELSE 1
      END) AS incomplete_tasks
FROM
  house_tasks AS ht
LEFT JOIN (
  SELECT
    task_id,
    STRING_AGG(DISTINCT CASE
                          WHEN task_status IS NULL THEN 'null'
                          ELSE task_status
                        END, '') = 'Completed' AS completed
  FROM
    task_status
  GROUP BY
    task_id) AS ts USING(task_id)
GROUP BY
  ht.house_id
ORDER BY
  ht.house_id DESC;
