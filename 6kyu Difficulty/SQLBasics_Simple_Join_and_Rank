# For this challenge you need to create a simple SELECT statement that will return all columns from the people table, and join to the sales table so that you can return the COUNT of all sales and RANK each person by their sale_count.

# people table schema
#  id
#  name
#  sales table schema
#  id

# people_id
#  sale
#  price

# You should return all people fields as well as the sale count as "sale_count" and the rank as "sale_rank".

# My Solution:
SELECT
  p.id,
  p.name,
  COUNT(s.sale) AS sale_count,
  DENSE_RANK() OVER(ORDER BY SUM(s.price) DESC) AS sale_rank
FROM
  people AS p
JOIN
  sales AS s ON
    p.id = s.people_id
GROUP BY 
  p.id;

# For this kata, I chose to use the DENSE_RANK() method to allow consecutive values in the case of a tie between ranking values. The OVER() method sets the instance of what to guide the rank method. 
# The ORDER BY creates the ordering of results to the SUM of the price. I ordered by descending values to get the larger numerals to appear as the higher rankings.
