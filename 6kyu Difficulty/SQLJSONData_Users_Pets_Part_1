# DESCRIPTION:
#  You have been provided with a PostgreSQL table named users. This table includes a jsonb column, info, which holds JSON data. 

# Here is a simplified schema of the table:
#  id: primary key, integer.
#  info: JSON column which includes:
#  name: a string (user's name).
#  pets: an array of JSON objects (each object represents a pet and has a name field and type field).

# Your task is to construct a SQL query that will return a list of users and their pet names, but only for users who have at least one pet whose name starts with the letter 'M'. 

# The query should return the following columns:
#  id - the users id
#  user_name - the user's name
#  pet_names - the names of the pets whose names start with 'M' as a comma-separated list in the order that they appeared in the array.

# Result should be ordered by id in asc order.
# Good luck!

# Desired Output
# The desired output should look like this:
#    id  | user_name       | pet_names        |
#  ------+-----------------|------------------|
#    15  | Kelley Ebert    | Moriah           |
#    16  | Hayley Schiller | Micheal, Magaret |

## MY SOLTION:
SELECT
  id,
  info ->> 'name' AS user_name,
  STRING_AGG(pet ->> 'name', ', ') AS pet_names
FROM
  users,
  jsonb_array_elements(info -> 'pets') AS pet
WHERE
  pet ->> 'name' LIKE 'M%'
GROUP BY
  id
ORDER BY
  id;
